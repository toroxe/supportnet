Projekt: FastAPI Web Application med MariaDB och Nginx
1. Servermilj√∂
Server-IP:
Intern: 192.168.0.180
Publik: Via Loopia p√• dom√§n my.supportnet.se.
Operativsystem: Ubuntu 20.04 LTS.
Python-version: 3.10 (via venv).
SSH-portar: Prim√§r (22) och backup (1022).
2. Applikation och tj√§nster
Webserver: Nginx (omdirigerar HTTP ‚Üí HTTPS).
Backend: FastAPI (Uvicorn k√∂rs som en tj√§nst).
HTTPS-certifikat: Let's Encrypt via Certbot.
Automatisk start:
FastAPI-systemtj√§nst: /etc/systemd/system/fastapi.service.
Aktiverad med sudo systemctl enable fastapi.
3. Viktiga filv√§gar
FastAPI-projektmapp: /home/tord/my_fastapi_project.
Python-virtual environment: /home/tord/venv.
Nginx-konfiguration: /etc/nginx/sites-available/default.
Certifikatskatalog: /etc/letsencrypt/live/my.supportnet.se/.
4. Kommandon f√∂r underh√•ll
Starta applikationen manuellt:
bash
Kopiera kod
source /home/tord/venv/bin/activate
uvicorn main:app --host 0.0.0.0 --port 8000
Systemtj√§nster:
Starta om Nginx: sudo systemctl restart nginx.
Starta om FastAPI: sudo systemctl restart fastapi.
Kontrollera loggar:
bash
Kopiera kod
sudo tail -f /var/log/nginx/error.log
sudo journalctl -u fastapi -f
5. N√§sta steg
Frontend:
Bygga en responsiv webbsida med CSS och JS-ramverk (exempel: Bootstrap, Tailwind eller Vue.js).
Databas:
Installera och konfigurera MariaDB.
Anv√§nd SQLAlchemy eller Tortoise ORM f√∂r databasinteraktion.
Deploy-process:
Hantera fil√∂verf√∂ring och uppdateringar via FileZilla (FZ).
6. Fels√∂kning och certifikat
Certifikatf√∂rnyelse: Automatiskt via Cron-jobb (verifiera med sudo certbot renew --dry-run).
Fels√∂kning av tj√§nster:
Kontrollera DNS, Nginx och FastAPI-loggar.
S√§kerst√§ll att tj√§nster √§r aktiva med:
bash
Kopiera kod
sudo systemctl status nginx
sudo systemctl status fastapi
Denna dokumentation ger dig en snabb √∂verblick och s√§kerst√§ller att vi kan arbeta vidare utan att f√∂rlora momentum i projektet. üòä