Sammanfattning av Projektet MySupportNet
Server-Side: Backend
Backend består av en FastAPI-applikation som är ansvarig för att hantera all datahantering, API-endpoints och mailfunktioner.

Filstruktur för Backend:

bash
Kopiera kod
backend/
│
├── api/
│   ├── __init__.py
│   ├── mail.py  # Hanterar mail-funktionalitet och API-rutter
│
├── main.py  # Huvudfil för backend där FastAPI-instansen körs
├── venv/    # Virtuell miljö för Python-paket
Huvudfunktioner i backend:

main.py: Startar servern och inkluderar alla API-routers.
mail.py: Hanterar POST-förfrågningar för att skicka e-post via Loopias SMTP-server. Hanterar fel som kan uppstå och returnerar JSON-svar.
Middleware för CORS är aktiverat för att säkerställa att frontend kan kommunicera med backend.
Körkommandon för server:

Starta backend-servern:
bash
Kopiera kod
nohup uvicorn backend.main:app --host 0.0.0.0 --port 8000 &
Client-Side: Frontend
Frontend är byggt med HTML, CSS och JavaScript för att skapa en responsiv och användarvänlig upplevelse. Det är uppdelat i flera komponenter för enkel underhållning.

Filstruktur för Frontend:

bash
Kopiera kod
frontend/
│
├── assets/
│   ├── pics/
│   │   └── horse.png  # Bakgrundsbild för contact.html
│   └── styles.css     # Global CSS för hela projektet
│
├── jscripts/
│   ├── render.js      # Laddar dynamiskt header och footer
│   └── functions.js   # Hanterar formulärens "submit"-funktion
│
├── pages/
│   ├── header.html    # Header med responsiv design och flexbox
│   ├── footer.html    # Footer med länkar och styling
│   ├── contact.html   # Kontaktformulär
│
└── index.html         # Startsidan
Frontend-funktionalitet:

CSS-struktur:

styles.css: Global styling för hela webbplatsen, inklusive media queries.
Specifika CSS-filer för header (header.css), footer (footer.css) och kontakt (contact.css).
JavaScript:

render.js: Dynamiskt inkluderar header och footer i sidorna.
functions.js: Hanterar kontaktformulärets POST-anrop till backend.
Responsivitet:

Flexbox används för layout i header och footer.
Media queries hanterar mindre skärmar, döljer logotypen under 480px och anpassar textstorleken.
Hur allt fungerar:
Laddning av komponenter:

Header och footer laddas dynamiskt via render.js.
Formuläret i contact.html skickar data via functions.js till backend.
API-kommunikation:

Backend lyssnar på /api/send_contact_email och hanterar e-post via SMTP-server.
CORS är konfigurerat för att möjliggöra kommunikation mellan frontend och backend.
Responsiv design:

Flexbox och media queries säkerställer att sidan ser bra ut på alla skärmar.
Specifika element döljs eller anpassas för små enheter.
Vad vi har åstadkommit:
En fullt fungerande och responsiv webbplats för MySupportNet.
Backend som hanterar kontaktformulärets funktionalitet och skickar e-post.
Dynamisk frontend som är lätt att underhålla och utöka.
Enkel deploy-struktur där backend och frontend kan hanteras separat.
Nästa steg:
Utökning av funktionalitet:

Skapa fler API-endpoints för nya funktioner.
Bygga ut backend för databasstöd (exempelvis SQLite eller PostgreSQL).
Automatisering av deployment:

Script för att ladda upp och hantera filer på servern.
Möjlig hosting på en molnplattform.
Designförbättringar:

Ytterligare responsivitet och användarupplevelse.
Fler komponenter som förbättrar navigering och interaktivitet.
